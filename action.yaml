name: 'Retry command'
description: Retries an action step on failure

inputs:
  command:
    required: true
    description: Command to be retried

  working_directory:
    required: true
    description: The directory in which the command will be run

  max_attempts:
    required: true
    default: '5'
    description: Max number of retry attempts

  retry_interval:
    required: true
    default: '5'
    description: Number of seconds to wait between retries

outputs:
  exit_code:
    description: 'Exit code of the last command executed' 
    value: ${{ steps.execute_command.outputs.exit_code }}
  result:
    description: 'Output of the last command executed'
    value: ${{ steps.execute_command.outputs.result }}

runs:
  using: 'composite'
  steps:
    - name: execute command
      id: execute_command
      shell: pwsh
      working-directory: ${{ inputs.working_directory }}
      run: |
        $max_attempts = [int]${{ inputs.max_attempts }}
        $retry_interval = [int]${{ inputs.retry_interval }}

        for ($i=1; $i -le $max_attempts; $i++) {
          Write-Host "Attempts: $i"

          # Run the PowerShell command
          $result = Invoke-Expression -Command ${{ inputs.command }} 2>&1
          $exit_code = $LASTEXITCODE
          
          Write-Host "Exit code: $exit_code"
          Write-Host "Result: $result"

          if ($exit_code -eq 0 -or $i -eq $max_attempts) {
            # Output the result and exit code
            Write-Output "##vso[task.setvariable variable=exit_code;isOutput=true]$exit_code"
            Write-Output "##vso[task.setvariable variable=result;isOutput=true]$result"
            Write-Host "result<<EOS"
            Write-Host "$result"
            Write-Host "EOS"
            Write-Host "exit_code-$exit_code"
            exit $exit_code
          }
          else {
            Write-Host "sleep: $retry_interval"
            Start-Sleep -Seconds $retry_interval
          }
        }
